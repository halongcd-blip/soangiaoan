import streamlit as st
import google.generativeai as genai
import time

# -----------------------------------------------------------------
# 1. C·∫§U H√åNH "B·ªò N√ÉO" AI
# -----------------------------------------------------------------

# L·∫§Y API KEY T·ª™ STREAMLIT SECRETS V√å L√ù DO B·∫¢O M·∫¨T
try:
    # T√™n bi·∫øn b√≠ m·∫≠t trong Streamlit Cloud l√† "GEMINI_API_KEY"
    API_KEY = st.secrets["GEMINI_API_KEY"]
except:
    st.error("L·ªñI C·∫§U H√åNH: ·ª®ng d·ª•ng ch∆∞a ƒë∆∞·ª£c cung c·∫•p 'GEMINI_API_KEY' trong Streamlit Secrets.")
    st.stop() # D·ª´ng ·ª©ng d·ª•ng n·∫øu kh√¥ng t√¨m th·∫•y key

# C·∫•u h√¨nh API key cho th∆∞ vi·ªán Gemini
genai.configure(api_key=API_KEY)

# Kh·ªüi t·∫°o m√¥ h√¨nh AI (ch√∫ng ta d√πng gemini-1.5-flash)
model = genai.GenerativeModel(model_name="gemini-2.5-flash")

# ƒê√¢y l√† "Prompt G·ªëc" phi√™n b·∫£n Ti·ªÉu h·ªçc ch√∫ng ta ƒë√£ t·∫°o
# To√†n b·ªô "b·ªô n√£o" s∆∞ ph·∫°m n·∫±m ·ªü ƒë√¢y
PROMPT_GOC = """
B·∫°n l√† m·ªôt chuy√™n gia gi√°o d·ª•c Ti·ªÉu h·ªçc h√†ng ƒë·∫ßu Vi·ªát Nam, am hi·ªÉu s√¢u s·∫Øc Ch∆∞∆°ng tr√¨nh GDPT 2018, ƒë·∫∑c bi·ªát l√† t√¢m l√Ω h·ªçc sinh Ti·ªÉu h·ªçc. B·∫°n l√† b·∫≠c th·∫ßy trong vi·ªác thi·∫øt k·∫ø c√°c ho·∫°t ƒë·ªông "h·ªçc m√† ch∆°i, ch∆°i m√† h·ªçc".

Nhi·ªám v·ª• c·ªßa b·∫°n l√† so·∫°n m·ªôt gi√°o √°n ho√†n ch·ªânh, s√°ng t·∫°o, t·∫≠p trung v√†o ph√°t tri·ªÉn nƒÉng l·ª±c v√† ph·∫©m ch·∫•t cho h·ªçc sinh ti·ªÉu h·ªçc.

D·ªÆ LI·ªÜU ƒê·∫¶U V√ÄO:

1.  **M√¥n h·ªçc:** {mon_hoc}
2.  **L·ªõp:** {lop}
3.  **B·ªô s√°ch:** {bo_sach}
4.  **T√™n b√†i h·ªçc/Ch·ªß ƒë·ªÅ:** {ten_bai}
5.  **Y√™u c·∫ßu c·∫ßn ƒë·∫°t (L·∫•y t·ª´ Ch∆∞∆°ng tr√¨nh m√¥n h·ªçc):** {yeu_cau}

Y√äU C·∫¶U ƒê·ªêI V·ªöI S·∫¢N PH·∫®M (GI√ÅO √ÅN):

B·∫°n PH·∫¢I tu√¢n th·ªß tuy·ªát ƒë·ªëi c·∫•u tr√∫c v√† c√°c y√™u c·∫ßu sau:

**PH·∫¶N I. M·ª§C TI√äU B√ÄI H·ªåC**
1.  **V·ªÅ ki·∫øn th·ª©c:** (B√°m s√°t {yeu_cau})
2.  **V·ªÅ nƒÉng l·ª±c:** (NƒÉng l·ª±c chung: T·ª± ch·ªß v√† t·ª± h·ªçc, Giao ti·∫øp v√† h·ª£p t√°c, Gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ v√† s√°ng t·∫°o; NƒÉng l·ª±c ƒë·∫∑c th√π c·ªßa m√¥n {mon_hoc})
3.  **V·ªÅ ph·∫©m ch·∫•t:** (Ch·ªçn 1-2 trong 5 ph·∫©m ch·∫•t: Y√™u n∆∞·ªõc, Nh√¢n √°i, ChƒÉm ch·ªâ, Trung th·ª±c, Tr√°ch nhi·ªám)

**PH·∫¶N II. ƒê·ªí D√ôNG D·∫†Y H·ªåC**
1.  **Chu·∫©n b·ªã c·ªßa gi√°o vi√™n (GV):** (Tranh ·∫£nh, video, phi·∫øu h·ªçc t·∫≠p, link game...)
2.  **Chu·∫©n b·ªã c·ªßa h·ªçc sinh (HS):** (SGK, V·ªü b√†i t·∫≠p, b√∫t m√†u...)

**PH·∫¶N III. C√ÅC HO·∫†T ƒê·ªòNG D·∫†Y H·ªåC CH·ª¶ Y·∫æU**
(M·ªói ho·∫°t ƒë·ªông B·∫ÆT BU·ªòC ph·∫£i c√≥ 2 m·ª•c: a. M·ª•c ti√™u, b. C√°ch ti·∫øn h√†nh)

**HO·∫†T ƒê·ªòNG 1: KH·ªûI ƒê·ªòNG (WARM-UP)** (3-5 ph√∫t)
* a. M·ª•c ti√™u: T·∫°o t√¢m th·∫ø vui v·∫ª, h·ª©ng th√∫.
* b. C√°ch ti·∫øn h√†nh: (Thi·∫øt k·∫ø m·ªôt tr√≤ ch∆°i, b√†i h√°t, c√¢u ƒë·ªë vui li√™n quan ƒë·∫øn {ten_bai})


**HO·∫†T ƒê·ªòNG 2: KH√ÅM PH√Å (H√åNH TH√ÄNH KI·∫æN TH·ª®C M·ªöI)** (15-20 ph√∫t)
* a. M·ª•c ti√™u: (B√°m s√°t {yeu_cau})
* b. C√°ch ti·∫øn h√†nh: (S·ª≠ d·ª•ng tr·ª±c quan, SGK, th·∫£o lu·∫≠n nh√≥m ƒë·ªÉ t√¨m ra ki·∫øn th·ª©c)


**HO·∫†T ƒê·ªòNG 3: LUY·ªÜN T·∫¨P (TH·ª∞C H√ÄNH)** (10-15 ph√∫t)
* a. M·ª•c ti√™u: √Åp d·ª•ng ki·∫øn th·ª©c, r√®n k·ªπ nƒÉng.
* b. C√°ch ti·∫øn h√†nh: (L√†m b√†i t·∫≠p, phi·∫øu h·ªçc t·∫≠p, s·∫Øm vai...)


**HO·∫†T ƒê·ªòNG 4: V·∫¨N D·ª§NG (C·ª¶NG C·ªê)** (3-5 ph√∫t)
* a. M·ª•c ti√™u: Li√™n h·ªá th·ª±c t·∫ø, c·ªßng c·ªë b√†i.
* b. C√°ch ti·∫øn h√†nh: (M·ªôt c√¢u h·ªèi li√™n h·ªá th·ª±c t·∫ø g·∫ßn g≈©i ho·∫∑c tr√≤ ch∆°i nhanh)


H√£y b·∫Øt ƒë·∫ßu t·∫°o gi√°o √°n.
"""

# -----------------------------------------------------------------
# 2. X√ÇY D·ª∞NG GIAO DI·ªÜN "CHAT BOX" (Web App)
# -----------------------------------------------------------------

st.set_page_config(page_title="Tr·ª£ l√Ω So·∫°n gi√°o √°n AI", page_icon="ü§ñ")
st.title("ü§ñ Tr·ª£ l√Ω So·∫°n gi√°o √°n Ti·ªÉu h·ªçc theo chu·∫©n GDPT 2018")
st.write("S·∫£n ph·∫©m c·ªßa th·∫ßy gi√°o Ho√†ng Tr·ªçng Nghƒ©a.")

# T·∫°o 5 √¥ nh·∫≠p li·ªáu cho 5 bi·∫øn s·ªë
mon_hoc = st.text_input("1. M√¥n h·ªçc:", placeholder="V√≠ d·ª•: Ti·∫øng Vi·ªát")
lop = st.text_input("2. L·ªõp:", placeholder="V√≠ d·ª•: 2")
bo_sach = st.text_input("3. B·ªô s√°ch:", placeholder="V√≠ d·ª•: C√°nh Di·ªÅu")
ten_bai = st.text_input("4. T√™n b√†i h·ªçc / Ch·ªß ƒë·ªÅ:", placeholder="V√≠ d·ª•: B√†i 2: Th·ªùi gian c·ªßa em")
yeu_cau = st.text_area("5. Y√™u c·∫ßu c·∫ßn ƒë·∫°t:", placeholder="Copy v√† d√°n Y√™u c·∫ßu c·∫ßn ƒë·∫°t c·ªßa b√†i n√†y t·ª´ file ph√¢n ph·ªëi ch∆∞∆°ng tr√¨nh...", height=150)

# N√∫t b·∫•m ƒë·ªÉ t·∫°o gi√°o √°n
if st.button("üöÄ T·∫°o Gi√°o √°n ngay!"):
    if not mon_hoc or not lop or not bo_sach or not ten_bai or not yeu_cau:
        st.error("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß c·∫£ 5 th√¥ng tin!")

    else:
        with st.spinner("Tr·ª£ l√Ω AI ƒëang so·∫°n gi√°o √°n, vui l√≤ng ch·ªù trong gi√¢y l√°t..."):
            try:
                # 1. ƒêi·ªÅn 5 bi·∫øn s·ªë v√†o "Prompt G·ªëc"
                final_prompt = PROMPT_GOC.format(
                    mon_hoc=mon_hoc,
                    lop=lop,
                    bo_sach=bo_sach,
                    ten_bai=ten_bai,
                    yeu_cau=yeu_cau
                )

                # 2. G·ªçi AI
                response = model.generate_content(final_prompt)

                # 3. Hi·ªÉn th·ªã k·∫øt qu·∫£
                st.balloons() # Hi·ªáu ·ª©ng b√≥ng bay khi th√†nh c√¥ng
                st.subheader("üéâ Gi√°o √°n c·ªßa b·∫°n ƒë√£ s·∫µn s√†ng:")
                st.markdown(response.text) # D√πng markdown ƒë·ªÉ hi·ªÉn th·ªã ƒë·∫πp h∆°n

            except Exception as e:
                st.error(f"ƒê√£ c√≥ l·ªói x·∫£y ra: {e}")
                st.error("L·ªói n√†y c√≥ th·ªÉ do API Key sai, ho·∫∑c do ch√≠nh s√°ch an to√†n c·ªßa Google. Vui l√≤ng ki·ªÉm tra l·∫°i.")

st.sidebar.title("Gi·ªõi thi·ªáu")
st.sidebar.info(
    """
    S·∫£n ph·∫©m c·ªßa Ho√†ng T·ªçng Nghƒ©a, Tr∆∞·ªùng Ti·ªÉu h·ªçc H·ªìng Gai. tham gia ng√†y h·ªôi "Nh√† gi√°o s√°ng t·∫°o v·ªõi c√¥ng ngh·ªá s·ªë v√† tr√≠ tu·ªá nh√¢n t·∫°o".
    \n
    S·∫£n ph·∫©m ·ª©ng d·ª•ng AI ƒë·ªÉ t·ª± ƒë·ªông so·∫°n gi√°o √°n cho gi√°o vi√™n Ti·ªÉu h·ªçc theo ƒë√∫ng chu·∫©n Ch∆∞∆°ng tr√¨nh GDPT 2018.
    """

)



